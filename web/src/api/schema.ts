/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/license": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** License Info */
        get: operations["license_info_license_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** State */
        get: operations["state_state_get"];
        put?: never;
        /** Update State */
        post: operations["update_state_state_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Api Index
         * @description Return resource index and embed template for TradingView.
         */
        get: operations["api_index_api_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Tradingview Page
         * @description Return simple TradingView iframe for manual inspection.
         */
        get: operations["tradingview_page_tv_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Status */
        get: operations["status_status_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Metrics */
        get: operations["metrics_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Assets Endpoint */
        get: operations["assets_endpoint_assets_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/catalysts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Catalysts Endpoint */
        get: operations["catalysts_endpoint_events_catalysts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/risk/security": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Risk Security Endpoint */
        get: operations["risk_security_endpoint_risk_security_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sentiment/trending": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Sentiment Trending
         * @description Return currently trending tokens with sentiment data.
         */
        get: operations["sentiment_trending_sentiment_trending_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sentiment/influencers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Sentiment Influencers
         * @description Return recent influencer messages.
         */
        get: operations["sentiment_influencers_sentiment_influencers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sentiment/pulse": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Sentiment Pulse
         * @description Return aggregate community sentiment metrics.
         */
        get: operations["sentiment_pulse_sentiment_pulse_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/news": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * News Endpoint
         * @description Return latest news items.
         */
        get: operations["news_endpoint_news_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/whales": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Whales Endpoint
         * @description Return basic whale tracking statistics.
         */
        get: operations["whales_endpoint_whales_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/smart-money-flow": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Smart Money Flow Endpoint
         * @description Return net inflow statistics for smart money.
         */
        get: operations["smart_money_flow_endpoint_smart_money_flow_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/copy-trading": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Copy Trading Endpoint
         * @description Return recent profitable whale trades being copied.
         */
        get: operations["copy_trading_endpoint_copy_trading_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/strategies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Strategies Endpoint
         * @description Return demo strategy performance statistics.
         */
        get: operations["strategies_endpoint_strategies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/arbitrage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Arbitrage Endpoint
         * @description Return demo arbitrage engine status.
         */
        get: operations["arbitrage_endpoint_arbitrage_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/strategy/performance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Strategy Performance */
        get: operations["strategy_performance_strategy_performance_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/strategy/breakdown": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Strategy Breakdown */
        get: operations["strategy_breakdown_strategy_breakdown_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/strategy/risk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Strategy Risk */
        get: operations["strategy_risk_strategy_risk_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/features": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Features Endpoint */
        get: operations["features_endpoint_features_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/features/schema": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Features Schema Endpoint
         * @description Return metadata mapping feature indices to names.
         */
        get: operations["features_schema_endpoint_features_schema_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/posterior": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Posterior Endpoint */
        get: operations["posterior_endpoint_posterior_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/backtest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Backtest */
        post: operations["backtest_backtest_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Dashboard */
        get: operations["dashboard_dashboard_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/positions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Positions */
        get: operations["positions_positions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Orders */
        get: operations["orders_orders_get"];
        put?: never;
        /** Place Order */
        post: operations["place_order_orders_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chart/portfolio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Chart Portfolio
         * @description Return portfolio equity history with pagination and downsampling.
         */
        get: operations["chart_portfolio_chart_portfolio_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chart/{symbol}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Chart */
        get: operations["chart_chart__symbol__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Version */
        get: operations["version_version_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manifest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Manifest */
        get: operations["manifest_manifest_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ArbitrageStat */
        ArbitrageStat: {
            /** Status */
            status: string;
            /** Trades */
            trades: number;
            /** Pnl */
            pnl: number;
            /** Spread */
            spread: number;
            /** Opportunities */
            opportunities: number;
            /** Latency */
            latency: number;
        };
        /** BacktestJobRequest */
        BacktestJobRequest: {
            /** Period */
            period: string;
            /** Capital */
            capital: number;
            /** Strategy Mix */
            strategy_mix: string;
        };
        /** BacktestJobResponse */
        BacktestJobResponse: {
            /** Id */
            id: string;
        };
        /** Catalyst */
        Catalyst: {
            /** Name */
            name: string;
            /** Eta */
            eta: number;
            /** Severity */
            severity: string;
        };
        /** CopyTrade */
        CopyTrade: {
            /** Whale */
            whale: string;
            /** Profit */
            profit?: number;
        };
        /** EndpointMap */
        EndpointMap: {
            /** Health */
            health: string;
            /** Status */
            status: string;
            /** Assets */
            assets: string;
            /** Features */
            features: string;
            /** Features Schema */
            features_schema: string;
            /** Posterior */
            posterior: string;
            /** Positions */
            positions: string;
            /** Orders */
            orders: string;
            /** Backtest */
            backtest: string;
            /** Chart */
            chart: string;
            /** Chart Portfolio */
            chart_portfolio: string;
            /** Version */
            version: string;
            /** Docs */
            docs: string;
            /** Redoc */
            redoc: string;
            /** Openapi */
            openapi: string;
            /** Metrics */
            metrics: string;
            /** Orders Ws */
            orders_ws: string;
            /** Features Ws */
            features_ws: string;
            /** Posterior Ws */
            posterior_ws: string;
            /** Positions Ws */
            positions_ws: string;
            /** Dashboard Ws */
            dashboard_ws: string;
            /** Logs Ws */
            logs_ws: string;
            /** Dashboard */
            dashboard: string;
            /** Manifest */
            manifest: string;
            /** Tv */
            tv: string;
            /** License */
            license: string;
            /** State */
            state: string;
            /** Events Catalysts */
            events_catalysts: string;
            /** Risk Security */
            risk_security: string;
            /** Whales */
            whales: string;
            /** Smart Money Flow */
            smart_money_flow: string;
            /** Copy Trading */
            copy_trading: string;
            /** Strategies */
            strategies: string;
            /** Arbitrage */
            arbitrage: string;
            /** Sentiment Trending */
            sentiment_trending: string;
            /** Sentiment Influencers */
            sentiment_influencers: string;
            /** Sentiment Pulse */
            sentiment_pulse: string;
            /** News */
            news: string;
            /** Strategy Performance */
            strategy_performance: string;
            /** Strategy Breakdown */
            strategy_breakdown: string;
            /** Strategy Risk */
            strategy_risk: string;
        };
        /** FeatureInfo */
        FeatureInfo: {
            /** Index */
            index: number;
            /** Name */
            name: string;
            /** Category */
            category: string;
            /** Event Kinds */
            event_kinds: string[];
            /** Unit */
            unit: string;
            /** Normalization */
            normalization: string;
        };
        /** FeatureSchema */
        FeatureSchema: {
            /** Version */
            version: number;
            /** Features */
            features: components["schemas"]["FeatureInfo"][];
            /** Timestamp */
            timestamp: number;
            /** Schema */
            schema: string;
        };
        /** FeatureSnapshot */
        FeatureSnapshot: {
            /** Features */
            features: number[];
            /** Timestamp */
            timestamp: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InfluencerAlert */
        InfluencerAlert: {
            /** Handle */
            handle: string;
            /** Message */
            message: string;
            /** Followers */
            followers: number;
            /** Stance */
            stance: string;
        };
        /** LicenseInfo */
        LicenseInfo: {
            /** Wallet */
            wallet: string;
            /** Mode */
            mode: string;
            /** Issued At */
            issued_at: number;
        };
        /** Manifest */
        Manifest: {
            /** Version */
            version: number;
            /** Rest */
            rest: components["schemas"]["RouteInfo"][];
            /** Websocket */
            websocket: string[];
            /** Timestamp */
            timestamp: number;
        };
        /** Metrics */
        Metrics: {
            /** Cpu */
            cpu?: number;
            /** Memory */
            memory?: number;
            network?: components["schemas"]["NetworkStats"];
        };
        /** NetworkStats */
        NetworkStats: {
            /** Tps */
            tps?: number;
            /** Fee */
            fee?: number;
        };
        /** NewsItem */
        NewsItem: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Source */
            source: string;
            /** Confidence */
            confidence: number;
        };
        /** OrderRequest */
        OrderRequest: {
            /** Token */
            token: string;
            /** Qty */
            qty: number;
            side: components["schemas"]["Side"];
            /** Limit */
            limit?: number;
        };
        /** OrderResponse */
        OrderResponse: {
            /** Id */
            id: number;
            /** Token */
            token: string;
            /** Quantity */
            quantity: number;
            side: components["schemas"]["Side"];
            /** Price */
            price: number;
            /** Slippage */
            slippage: number;
            /** Fee */
            fee: number;
            /** Timestamp */
            timestamp: number;
            /** Status */
            status: string;
        };
        /** PosteriorSnapshot */
        PosteriorSnapshot: {
            /** Rug */
            rug: number;
            /** Trend */
            trend: number;
            /** Revert */
            revert: number;
            /** Chop */
            chop: number;
            /** Timestamp */
            timestamp: number;
        };
        /** PulseMetrics */
        PulseMetrics: {
            /** Fear Greed */
            fear_greed: number;
            /** Fear Greed Pct */
            fear_greed_pct: number;
            /** Social Volume */
            social_volume: number;
            /** Social Volume Pct */
            social_volume_pct: number;
            /** Fomo */
            fomo: number;
            /** Fomo Pct */
            fomo_pct: number;
        };
        /** RouteInfo */
        RouteInfo: {
            /** Path */
            path: string;
            /** Methods */
            methods: string[];
        };
        /** SecurityFlag */
        SecurityFlag: {
            /** Status */
            status: string;
            /** Detail */
            detail: string;
        };
        /** SecurityReport */
        SecurityReport: {
            rug_pull: components["schemas"]["SecurityFlag"];
            liquidity: components["schemas"]["SecurityFlag"];
            contract_verified: components["schemas"]["SecurityFlag"];
            holder_distribution: components["schemas"]["SecurityFlag"];
            trading_patterns: components["schemas"]["SecurityFlag"];
        };
        /** ServiceMap */
        ServiceMap: {
            /** Tradingview */
            tradingview: string;
            endpoints: components["schemas"]["EndpointMap"];
            license: components["schemas"]["LicenseInfo"];
            /** Timestamp */
            timestamp: number;
            /** Schema */
            schema: string;
        };
        /**
         * Side
         * @description An enumeration.
         * @enum {unknown}
         */
        Side: "buy" | "sell";
        /** SmartMoneyFlow */
        SmartMoneyFlow: {
            /** Net Inflow */
            net_inflow: number;
            /** Trend */
            trend: string;
        };
        /** StateUpdate */
        StateUpdate: {
            /** Running */
            running?: boolean;
            /** Emergency Stop */
            emergency_stop?: boolean;
            /** Settings */
            settings?: Record<string, never>;
            /** Mode */
            mode?: string;
            /** Paper Assets */
            paper_assets?: string[];
            /** Paper Capital */
            paper_capital?: number;
        };
        /** StrategyBreakdownItem */
        StrategyBreakdownItem: {
            /** Name */
            name: string;
            /** Pnl */
            pnl: number;
            /** Win Rate */
            win_rate: number;
        };
        /** StrategyPerf */
        StrategyPerf: {
            /** Name */
            name: string;
            /** Pnl */
            pnl: number;
            /** Win Rate */
            win_rate: number;
        };
        /** StrategyRisk */
        StrategyRisk: {
            /** Sharpe */
            sharpe: number;
            /** Max Drawdown */
            max_drawdown: number;
            /** Volatility */
            volatility: number;
            /** Calmar */
            calmar: number;
        };
        /** StrategyStat */
        StrategyStat: {
            /** Name */
            name: string;
            /** Trades */
            trades: number;
            /** Pnl */
            pnl: number;
            /** Confidence */
            confidence: number;
            /** Targets */
            targets: number;
            /** Success */
            success: number;
        };
        /** TrendingToken */
        TrendingToken: {
            /** Symbol */
            symbol: string;
            /** Mentions */
            mentions: number;
            /** Change Pct */
            change_pct: number;
            /** Sentiment */
            sentiment: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** WhaleStats */
        WhaleStats: {
            /** Following */
            following: number;
            /** Success Rate */
            success_rate: number;
            /** Copied Today */
            copied_today: number;
            /** Profit */
            profit: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    license_info_license_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LicenseInfo"];
                };
            };
        };
    };
    state_state_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    update_state_state_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StateUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    api_index_api_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceMap"];
                };
            };
        };
    };
    health_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    tradingview_page_tv_get: {
        parameters: {
            query?: {
                symbol?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    status_status_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    metrics_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Metrics"];
                };
            };
        };
    };
    assets_endpoint_assets_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    catalysts_endpoint_events_catalysts_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Catalyst"][];
                };
            };
        };
    };
    risk_security_endpoint_risk_security_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SecurityReport"];
                };
            };
        };
    };
    sentiment_trending_sentiment_trending_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrendingToken"][];
                };
            };
        };
    };
    sentiment_influencers_sentiment_influencers_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InfluencerAlert"][];
                };
            };
        };
    };
    sentiment_pulse_sentiment_pulse_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PulseMetrics"];
                };
            };
        };
    };
    news_endpoint_news_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NewsItem"][];
                };
            };
        };
    };
    whales_endpoint_whales_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WhaleStats"];
                };
            };
        };
    };
    smart_money_flow_endpoint_smart_money_flow_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SmartMoneyFlow"];
                };
            };
        };
    };
    copy_trading_endpoint_copy_trading_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CopyTrade"][];
                };
            };
        };
    };
    strategies_endpoint_strategies_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrategyStat"][];
                };
            };
        };
    };
    arbitrage_endpoint_arbitrage_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArbitrageStat"];
                };
            };
        };
    };
    strategy_performance_strategy_performance_get: {
        parameters: {
            query?: {
                period?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrategyPerf"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    strategy_breakdown_strategy_breakdown_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrategyBreakdownItem"][];
                };
            };
        };
    };
    strategy_risk_strategy_risk_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrategyRisk"];
                };
            };
        };
    };
    features_endpoint_features_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FeatureSnapshot"];
                };
            };
        };
    };
    features_schema_endpoint_features_schema_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FeatureSchema"];
                };
            };
        };
    };
    posterior_endpoint_posterior_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PosteriorSnapshot"];
                };
            };
        };
    };
    backtest_backtest_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BacktestJobRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacktestJobResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    dashboard_dashboard_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    positions_positions_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    orders_orders_get: {
        parameters: {
            query?: {
                status?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    place_order_orders_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    chart_portfolio_chart_portfolio_get: {
        parameters: {
            query?: {
                tf?: string;
                start?: number;
                end?: number;
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    chart_chart__symbol__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                symbol: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    version_version_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    manifest_manifest_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Manifest"];
                };
            };
        };
    };
}
